# Once Release PR merges
# Tag as release
# Release
# Publish

name: Tag and Publish

on:
  push:
    branches:
      - master

jobs:
  tag_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: pip install poetry

      - name: Install Dependencies
        run: poetry install

      - name: Get Version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(poetry version -s)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Tag the Release
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag "v${{ env.VERSION }}"
          git push origin "refs/tags/v${{ env.VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --build
