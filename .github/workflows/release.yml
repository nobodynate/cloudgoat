# This is triggered manually.
# This will bump the version and publish a package to PyPi.
# if it completes it will also trigger a new Docker image build and push to DockHub at:
# https://github.com/RhinoSecurityLabs/pacu/blob/master/.github/workflows/deploy-docker.yml
# 


name: Release

on: 
  workflow_dispatch:
    inputs:
      SemVer_level:
        type: choice
        description: Which SemVer to bump
        options: 
        - major
        - minor
        - patch
        default: patch
      SemVer_version:
        type: string
        description: "Specify an exact version (leave empty to auto-bump)"
        default: ""
          
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Bump version
      run: |
        if [ -n "${{ github.event.inputs.SemVer_version }}" ]; then
          VERSION=${{ github.event.inputs.SemVer_version }}
          poetry version "$VERSION"
        else
          poetry version ${{ github.event.inputs.SemVer_level }}
          VERSION=$(poetry version -s)
        fi
        ver="$(poetry version -s)"
        sed -i "s/cloudgoat.version=\".*\"/cloudgoat.version=\"$ver\"/" Dockerfile

    - name: Commit and push version changes
      run: |
        ver="$(poetry version -s)"
        git config --global user.email "actions@github.com"
        git config --global user.name "Github-Actions"

        # Authenticate with PAT
        git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

        git checkout -b release-v${ver}  # Create a new release branch
        git add .
        git commit -m "chore(release): bump version to ${ver}"
        git push origin release-v${ver}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GH_PAT }}
        branch: release-v${{ env.VERSION }}
        title: "Release v${{ env.VERSION }}"
        body: "Automated release PR for version v${{ env.VERSION }}"
        base: master
        draft: false

    - name: Build and publish
      run: |
        poetry publish --build -u "__token__" -p "${{ secrets.PYPI_TOKEN }}"
